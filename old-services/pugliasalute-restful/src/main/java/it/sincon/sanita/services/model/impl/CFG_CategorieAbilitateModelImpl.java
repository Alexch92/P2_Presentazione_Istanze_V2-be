package it.sincon.sanita.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import it.sincon.sanita.services.model.CFG_CategorieAbilitate;
import it.sincon.sanita.services.model.CFG_CategorieAbilitateModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CFG_CategorieAbilitate service. Represents a row in the &quot;SANITAREST_CFG_CategorieAbilitate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.sincon.sanita.services.model.CFG_CategorieAbilitateModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CFG_CategorieAbilitateImpl}.
 * </p>
 *
 * @author Sincon
 * @see CFG_CategorieAbilitateImpl
 * @see it.sincon.sanita.services.model.CFG_CategorieAbilitate
 * @see it.sincon.sanita.services.model.CFG_CategorieAbilitateModel
 * @generated
 */
public class CFG_CategorieAbilitateModelImpl extends BaseModelImpl<CFG_CategorieAbilitate>
    implements CFG_CategorieAbilitateModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a c f g_ categorie abilitate model instance should use the {@link it.sincon.sanita.services.model.CFG_CategorieAbilitate} interface instead.
     */
    public static final String TABLE_NAME = "SANITAREST_CFG_CategorieAbilitate";
    public static final Object[][] TABLE_COLUMNS = {
            { "titoloStruttura", Types.VARCHAR },
            { "denominazione", Types.VARCHAR },
            { "ordine", Types.INTEGER },
            { "className", Types.VARCHAR },
            { "defaultRicerca", Types.BOOLEAN }
        };
    public static final String TABLE_SQL_CREATE = "create table SANITAREST_CFG_CategorieAbilitate (titoloStruttura VARCHAR(255) not null primary key,denominazione VARCHAR(255) null,ordine INTEGER,className VARCHAR(255) null,defaultRicerca BOOLEAN)";
    public static final String TABLE_SQL_DROP = "drop table SANITAREST_CFG_CategorieAbilitate";
    public static final String ORDER_BY_JPQL = " ORDER BY cfg_CategorieAbilitate.ordine ASC";
    public static final String ORDER_BY_SQL = " ORDER BY SANITAREST_CFG_CategorieAbilitate.ordine ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.it.sincon.sanita.services.model.CFG_CategorieAbilitate"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.it.sincon.sanita.services.model.CFG_CategorieAbilitate"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.it.sincon.sanita.services.model.CFG_CategorieAbilitate"),
            true);
    public static long CLASSNAME_COLUMN_BITMASK = 1L;
    public static long DEFAULTRICERCA_COLUMN_BITMASK = 2L;
    public static long ORDINE_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.it.sincon.sanita.services.model.CFG_CategorieAbilitate"));
    private static ClassLoader _classLoader = CFG_CategorieAbilitate.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            CFG_CategorieAbilitate.class
        };
    private String _titoloStruttura;
    private String _denominazione;
    private int _ordine;
    private String _className;
    private String _originalClassName;
    private boolean _defaultRicerca;
    private boolean _originalDefaultRicerca;
    private boolean _setOriginalDefaultRicerca;
    private long _columnBitmask;
    private CFG_CategorieAbilitate _escapedModel;

    public CFG_CategorieAbilitateModelImpl() {
    }

    @Override
    public String getPrimaryKey() {
        return _titoloStruttura;
    }

    @Override
    public void setPrimaryKey(String primaryKey) {
        setTitoloStruttura(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _titoloStruttura;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((String) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return CFG_CategorieAbilitate.class;
    }

    @Override
    public String getModelClassName() {
        return CFG_CategorieAbilitate.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("titoloStruttura", getTitoloStruttura());
        attributes.put("denominazione", getDenominazione());
        attributes.put("ordine", getOrdine());
        attributes.put("className", getClassName());
        attributes.put("defaultRicerca", getDefaultRicerca());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String titoloStruttura = (String) attributes.get("titoloStruttura");

        if (titoloStruttura != null) {
            setTitoloStruttura(titoloStruttura);
        }

        String denominazione = (String) attributes.get("denominazione");

        if (denominazione != null) {
            setDenominazione(denominazione);
        }

        Integer ordine = (Integer) attributes.get("ordine");

        if (ordine != null) {
            setOrdine(ordine);
        }

        String className = (String) attributes.get("className");

        if (className != null) {
            setClassName(className);
        }

        Boolean defaultRicerca = (Boolean) attributes.get("defaultRicerca");

        if (defaultRicerca != null) {
            setDefaultRicerca(defaultRicerca);
        }
    }

    @Override
    public String getTitoloStruttura() {
        if (_titoloStruttura == null) {
            return StringPool.BLANK;
        } else {
            return _titoloStruttura;
        }
    }

    @Override
    public void setTitoloStruttura(String titoloStruttura) {
        _titoloStruttura = titoloStruttura;
    }

    @Override
    public String getDenominazione() {
        if (_denominazione == null) {
            return StringPool.BLANK;
        } else {
            return _denominazione;
        }
    }

    @Override
    public void setDenominazione(String denominazione) {
        _denominazione = denominazione;
    }

    @Override
    public int getOrdine() {
        return _ordine;
    }

    @Override
    public void setOrdine(int ordine) {
        _columnBitmask = -1L;

        _ordine = ordine;
    }

    @Override
    public String getClassName() {
        if (_className == null) {
            return StringPool.BLANK;
        } else {
            return _className;
        }
    }

    @Override
    public void setClassName(String className) {
        _columnBitmask |= CLASSNAME_COLUMN_BITMASK;

        if (_originalClassName == null) {
            _originalClassName = _className;
        }

        _className = className;
    }

    public String getOriginalClassName() {
        return GetterUtil.getString(_originalClassName);
    }

    @Override
    public boolean getDefaultRicerca() {
        return _defaultRicerca;
    }

    @Override
    public boolean isDefaultRicerca() {
        return _defaultRicerca;
    }

    @Override
    public void setDefaultRicerca(boolean defaultRicerca) {
        _columnBitmask |= DEFAULTRICERCA_COLUMN_BITMASK;

        if (!_setOriginalDefaultRicerca) {
            _setOriginalDefaultRicerca = true;

            _originalDefaultRicerca = _defaultRicerca;
        }

        _defaultRicerca = defaultRicerca;
    }

    public boolean getOriginalDefaultRicerca() {
        return _originalDefaultRicerca;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public CFG_CategorieAbilitate toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (CFG_CategorieAbilitate) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        CFG_CategorieAbilitateImpl cfg_CategorieAbilitateImpl = new CFG_CategorieAbilitateImpl();

        cfg_CategorieAbilitateImpl.setTitoloStruttura(getTitoloStruttura());
        cfg_CategorieAbilitateImpl.setDenominazione(getDenominazione());
        cfg_CategorieAbilitateImpl.setOrdine(getOrdine());
        cfg_CategorieAbilitateImpl.setClassName(getClassName());
        cfg_CategorieAbilitateImpl.setDefaultRicerca(getDefaultRicerca());

        cfg_CategorieAbilitateImpl.resetOriginalValues();

        return cfg_CategorieAbilitateImpl;
    }

    @Override
    public int compareTo(CFG_CategorieAbilitate cfg_CategorieAbilitate) {
        int value = 0;

        if (getOrdine() < cfg_CategorieAbilitate.getOrdine()) {
            value = -1;
        } else if (getOrdine() > cfg_CategorieAbilitate.getOrdine()) {
            value = 1;
        } else {
            value = 0;
        }

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof CFG_CategorieAbilitate)) {
            return false;
        }

        CFG_CategorieAbilitate cfg_CategorieAbilitate = (CFG_CategorieAbilitate) obj;

        String primaryKey = cfg_CategorieAbilitate.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
        CFG_CategorieAbilitateModelImpl cfg_CategorieAbilitateModelImpl = this;

        cfg_CategorieAbilitateModelImpl._originalClassName = cfg_CategorieAbilitateModelImpl._className;

        cfg_CategorieAbilitateModelImpl._originalDefaultRicerca = cfg_CategorieAbilitateModelImpl._defaultRicerca;

        cfg_CategorieAbilitateModelImpl._setOriginalDefaultRicerca = false;

        cfg_CategorieAbilitateModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<CFG_CategorieAbilitate> toCacheModel() {
        CFG_CategorieAbilitateCacheModel cfg_CategorieAbilitateCacheModel = new CFG_CategorieAbilitateCacheModel();

        cfg_CategorieAbilitateCacheModel.titoloStruttura = getTitoloStruttura();

        String titoloStruttura = cfg_CategorieAbilitateCacheModel.titoloStruttura;

        if ((titoloStruttura != null) && (titoloStruttura.length() == 0)) {
            cfg_CategorieAbilitateCacheModel.titoloStruttura = null;
        }

        cfg_CategorieAbilitateCacheModel.denominazione = getDenominazione();

        String denominazione = cfg_CategorieAbilitateCacheModel.denominazione;

        if ((denominazione != null) && (denominazione.length() == 0)) {
            cfg_CategorieAbilitateCacheModel.denominazione = null;
        }

        cfg_CategorieAbilitateCacheModel.ordine = getOrdine();

        cfg_CategorieAbilitateCacheModel.className = getClassName();

        String className = cfg_CategorieAbilitateCacheModel.className;

        if ((className != null) && (className.length() == 0)) {
            cfg_CategorieAbilitateCacheModel.className = null;
        }

        cfg_CategorieAbilitateCacheModel.defaultRicerca = getDefaultRicerca();

        return cfg_CategorieAbilitateCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(11);

        sb.append("{titoloStruttura=");
        sb.append(getTitoloStruttura());
        sb.append(", denominazione=");
        sb.append(getDenominazione());
        sb.append(", ordine=");
        sb.append(getOrdine());
        sb.append(", className=");
        sb.append(getClassName());
        sb.append(", defaultRicerca=");
        sb.append(getDefaultRicerca());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(19);

        sb.append("<model><model-name>");
        sb.append("it.sincon.sanita.services.model.CFG_CategorieAbilitate");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>titoloStruttura</column-name><column-value><![CDATA[");
        sb.append(getTitoloStruttura());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>denominazione</column-name><column-value><![CDATA[");
        sb.append(getDenominazione());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ordine</column-name><column-value><![CDATA[");
        sb.append(getOrdine());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>className</column-name><column-value><![CDATA[");
        sb.append(getClassName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>defaultRicerca</column-name><column-value><![CDATA[");
        sb.append(getDefaultRicerca());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
