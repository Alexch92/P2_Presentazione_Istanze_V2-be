package it.sincon.sanita.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.sincon.sanita.services.model.StrutturaSanitaria;
import it.sincon.sanita.services.model.StrutturaSanitariaModel;
import it.sincon.sanita.services.model.StrutturaSanitariaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the StrutturaSanitaria service. Represents a row in the &quot;SANITAREST_StrutturaSanitaria&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.sincon.sanita.services.model.StrutturaSanitariaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StrutturaSanitariaImpl}.
 * </p>
 *
 * @author Sincon
 * @see StrutturaSanitariaImpl
 * @see it.sincon.sanita.services.model.StrutturaSanitaria
 * @see it.sincon.sanita.services.model.StrutturaSanitariaModel
 * @generated
 */
@JSON(strict = true)
public class StrutturaSanitariaModelImpl extends BaseModelImpl<StrutturaSanitaria>
    implements StrutturaSanitariaModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a struttura sanitaria model instance should use the {@link it.sincon.sanita.services.model.StrutturaSanitaria} interface instead.
     */
    public static final String TABLE_NAME = "SANITAREST_StrutturaSanitaria";
    public static final Object[][] TABLE_COLUMNS = {
            { "pk", Types.BIGINT },
            { "idStruttura", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "idTipoStruttura", Types.VARCHAR },
            { "tipoStruttura", Types.VARCHAR },
            { "tipologia", Types.VARCHAR },
            { "denominazione", Types.VARCHAR },
            { "immagine", Types.VARCHAR },
            { "descrizione", Types.VARCHAR },
            { "indirizzo", Types.VARCHAR },
            { "lat", Types.DOUBLE },
            { "lng", Types.DOUBLE },
            { "distanza", Types.DOUBLE },
            { "telefono", Types.VARCHAR },
            { "email", Types.VARCHAR },
            { "fax", Types.VARCHAR },
            { "orari", Types.VARCHAR },
            { "locale", Types.VARCHAR },
            { "stato", Types.INTEGER },
            { "childrenEdottoOspedaleCollegato", Types.VARCHAR },
            { "childrenEdottoAmbulatorio", Types.VARCHAR },
            { "childrenEdottoUnitaOperativa", Types.VARCHAR },
            { "childrenEdottoUnitaps", Types.VARCHAR },
            { "relazioneAmbulatorio", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table SANITAREST_StrutturaSanitaria (pk LONG not null primary key,idStruttura LONG,groupId LONG,idTipoStruttura VARCHAR(255) null,tipoStruttura VARCHAR(255) null,tipologia VARCHAR(255) null,denominazione VARCHAR(500) null,immagine VARCHAR(255) null,descrizione TEXT null,indirizzo VARCHAR(255) null,lat DOUBLE,lng DOUBLE,distanza DOUBLE,telefono VARCHAR(75) null,email VARCHAR(255) null,fax VARCHAR(75) null,orari VARCHAR(500) null,locale VARCHAR(75) null,stato INTEGER,childrenEdottoOspedaleCollegato VARCHAR(500) null,childrenEdottoAmbulatorio VARCHAR(2000) null,childrenEdottoUnitaOperativa VARCHAR(2000) null,childrenEdottoUnitaps VARCHAR(500) null,relazioneAmbulatorio VARCHAR(2000) null)";
    public static final String TABLE_SQL_DROP = "drop table SANITAREST_StrutturaSanitaria";
    public static final String ORDER_BY_JPQL = " ORDER BY strutturaSanitaria.pk ASC";
    public static final String ORDER_BY_SQL = " ORDER BY SANITAREST_StrutturaSanitaria.pk ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.it.sincon.sanita.services.model.StrutturaSanitaria"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.it.sincon.sanita.services.model.StrutturaSanitaria"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.it.sincon.sanita.services.model.StrutturaSanitaria"),
            true);
    public static long IDSTRUTTURA_COLUMN_BITMASK = 1L;
    public static long LOCALE_COLUMN_BITMASK = 2L;
    public static long PK_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.it.sincon.sanita.services.model.StrutturaSanitaria"));
    private static ClassLoader _classLoader = StrutturaSanitaria.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            StrutturaSanitaria.class
        };
    private long _pk;
    private long _idStruttura;
    private long _originalIdStruttura;
    private boolean _setOriginalIdStruttura;
    private long _groupId;
    private String _idTipoStruttura;
    private String _tipoStruttura;
    private String _tipologia;
    private String _denominazione;
    private String _immagine;
    private String _descrizione;
    private String _indirizzo;
    private double _lat;
    private double _lng;
    private double _distanza;
    private String _telefono;
    private String _email;
    private String _fax;
    private String _orari;
    private String _locale;
    private String _originalLocale;
    private int _stato;
    private String _childrenEdottoOspedaleCollegato;
    private String _childrenEdottoAmbulatorio;
    private String _childrenEdottoUnitaOperativa;
    private String _childrenEdottoUnitaps;
    private String _relazioneAmbulatorio;
    private long _columnBitmask;
    private StrutturaSanitaria _escapedModel;

    public StrutturaSanitariaModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static StrutturaSanitaria toModel(StrutturaSanitariaSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        StrutturaSanitaria model = new StrutturaSanitariaImpl();

        model.setPk(soapModel.getPk());
        model.setIdStruttura(soapModel.getIdStruttura());
        model.setGroupId(soapModel.getGroupId());
        model.setIdTipoStruttura(soapModel.getIdTipoStruttura());
        model.setTipoStruttura(soapModel.getTipoStruttura());
        model.setTipologia(soapModel.getTipologia());
        model.setDenominazione(soapModel.getDenominazione());
        model.setImmagine(soapModel.getImmagine());
        model.setDescrizione(soapModel.getDescrizione());
        model.setIndirizzo(soapModel.getIndirizzo());
        model.setLat(soapModel.getLat());
        model.setLng(soapModel.getLng());
        model.setDistanza(soapModel.getDistanza());
        model.setTelefono(soapModel.getTelefono());
        model.setEmail(soapModel.getEmail());
        model.setFax(soapModel.getFax());
        model.setOrari(soapModel.getOrari());
        model.setLocale(soapModel.getLocale());
        model.setStato(soapModel.getStato());
        model.setChildrenEdottoOspedaleCollegato(soapModel.getChildrenEdottoOspedaleCollegato());
        model.setChildrenEdottoAmbulatorio(soapModel.getChildrenEdottoAmbulatorio());
        model.setChildrenEdottoUnitaOperativa(soapModel.getChildrenEdottoUnitaOperativa());
        model.setChildrenEdottoUnitaps(soapModel.getChildrenEdottoUnitaps());
        model.setRelazioneAmbulatorio(soapModel.getRelazioneAmbulatorio());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<StrutturaSanitaria> toModels(
        StrutturaSanitariaSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<StrutturaSanitaria> models = new ArrayList<StrutturaSanitaria>(soapModels.length);

        for (StrutturaSanitariaSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _pk;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setPk(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _pk;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return StrutturaSanitaria.class;
    }

    @Override
    public String getModelClassName() {
        return StrutturaSanitaria.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("pk", getPk());
        attributes.put("idStruttura", getIdStruttura());
        attributes.put("groupId", getGroupId());
        attributes.put("idTipoStruttura", getIdTipoStruttura());
        attributes.put("tipoStruttura", getTipoStruttura());
        attributes.put("tipologia", getTipologia());
        attributes.put("denominazione", getDenominazione());
        attributes.put("immagine", getImmagine());
        attributes.put("descrizione", getDescrizione());
        attributes.put("indirizzo", getIndirizzo());
        attributes.put("lat", getLat());
        attributes.put("lng", getLng());
        attributes.put("distanza", getDistanza());
        attributes.put("telefono", getTelefono());
        attributes.put("email", getEmail());
        attributes.put("fax", getFax());
        attributes.put("orari", getOrari());
        attributes.put("locale", getLocale());
        attributes.put("stato", getStato());
        attributes.put("childrenEdottoOspedaleCollegato",
            getChildrenEdottoOspedaleCollegato());
        attributes.put("childrenEdottoAmbulatorio",
            getChildrenEdottoAmbulatorio());
        attributes.put("childrenEdottoUnitaOperativa",
            getChildrenEdottoUnitaOperativa());
        attributes.put("childrenEdottoUnitaps", getChildrenEdottoUnitaps());
        attributes.put("relazioneAmbulatorio", getRelazioneAmbulatorio());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long pk = (Long) attributes.get("pk");

        if (pk != null) {
            setPk(pk);
        }

        Long idStruttura = (Long) attributes.get("idStruttura");

        if (idStruttura != null) {
            setIdStruttura(idStruttura);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        String idTipoStruttura = (String) attributes.get("idTipoStruttura");

        if (idTipoStruttura != null) {
            setIdTipoStruttura(idTipoStruttura);
        }

        String tipoStruttura = (String) attributes.get("tipoStruttura");

        if (tipoStruttura != null) {
            setTipoStruttura(tipoStruttura);
        }

        String tipologia = (String) attributes.get("tipologia");

        if (tipologia != null) {
            setTipologia(tipologia);
        }

        String denominazione = (String) attributes.get("denominazione");

        if (denominazione != null) {
            setDenominazione(denominazione);
        }

        String immagine = (String) attributes.get("immagine");

        if (immagine != null) {
            setImmagine(immagine);
        }

        String descrizione = (String) attributes.get("descrizione");

        if (descrizione != null) {
            setDescrizione(descrizione);
        }

        String indirizzo = (String) attributes.get("indirizzo");

        if (indirizzo != null) {
            setIndirizzo(indirizzo);
        }

        Double lat = (Double) attributes.get("lat");

        if (lat != null) {
            setLat(lat);
        }

        Double lng = (Double) attributes.get("lng");

        if (lng != null) {
            setLng(lng);
        }

        Double distanza = (Double) attributes.get("distanza");

        if (distanza != null) {
            setDistanza(distanza);
        }

        String telefono = (String) attributes.get("telefono");

        if (telefono != null) {
            setTelefono(telefono);
        }

        String email = (String) attributes.get("email");

        if (email != null) {
            setEmail(email);
        }

        String fax = (String) attributes.get("fax");

        if (fax != null) {
            setFax(fax);
        }

        String orari = (String) attributes.get("orari");

        if (orari != null) {
            setOrari(orari);
        }

        String locale = (String) attributes.get("locale");

        if (locale != null) {
            setLocale(locale);
        }

        Integer stato = (Integer) attributes.get("stato");

        if (stato != null) {
            setStato(stato);
        }

        String childrenEdottoOspedaleCollegato = (String) attributes.get(
                "childrenEdottoOspedaleCollegato");

        if (childrenEdottoOspedaleCollegato != null) {
            setChildrenEdottoOspedaleCollegato(childrenEdottoOspedaleCollegato);
        }

        String childrenEdottoAmbulatorio = (String) attributes.get(
                "childrenEdottoAmbulatorio");

        if (childrenEdottoAmbulatorio != null) {
            setChildrenEdottoAmbulatorio(childrenEdottoAmbulatorio);
        }

        String childrenEdottoUnitaOperativa = (String) attributes.get(
                "childrenEdottoUnitaOperativa");

        if (childrenEdottoUnitaOperativa != null) {
            setChildrenEdottoUnitaOperativa(childrenEdottoUnitaOperativa);
        }

        String childrenEdottoUnitaps = (String) attributes.get(
                "childrenEdottoUnitaps");

        if (childrenEdottoUnitaps != null) {
            setChildrenEdottoUnitaps(childrenEdottoUnitaps);
        }

        String relazioneAmbulatorio = (String) attributes.get(
                "relazioneAmbulatorio");

        if (relazioneAmbulatorio != null) {
            setRelazioneAmbulatorio(relazioneAmbulatorio);
        }
    }

    @JSON(include = false)
    @Override
    public long getPk() {
        return _pk;
    }

    @Override
    public void setPk(long pk) {
        _pk = pk;
    }

    @JSON
    @Override
    public long getIdStruttura() {
        return _idStruttura;
    }

    @Override
    public void setIdStruttura(long idStruttura) {
        _columnBitmask |= IDSTRUTTURA_COLUMN_BITMASK;

        if (!_setOriginalIdStruttura) {
            _setOriginalIdStruttura = true;

            _originalIdStruttura = _idStruttura;
        }

        _idStruttura = idStruttura;
    }

    public long getOriginalIdStruttura() {
        return _originalIdStruttura;
    }

    @JSON(include = false)
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @JSON(include = false)
    @Override
    public String getIdTipoStruttura() {
        if (_idTipoStruttura == null) {
            return StringPool.BLANK;
        } else {
            return _idTipoStruttura;
        }
    }

    @Override
    public void setIdTipoStruttura(String idTipoStruttura) {
        _idTipoStruttura = idTipoStruttura;
    }

    @JSON
    @Override
    public String getTipoStruttura() {
        if (_tipoStruttura == null) {
            return StringPool.BLANK;
        } else {
            return _tipoStruttura;
        }
    }

    @Override
    public void setTipoStruttura(String tipoStruttura) {
        _tipoStruttura = tipoStruttura;
    }

    @JSON(include = false)
    @Override
    public String getTipologia() {
        if (_tipologia == null) {
            return StringPool.BLANK;
        } else {
            return _tipologia;
        }
    }

    @Override
    public void setTipologia(String tipologia) {
        _tipologia = tipologia;
    }

    @JSON
    @Override
    public String getDenominazione() {
        if (_denominazione == null) {
            return StringPool.BLANK;
        } else {
            return _denominazione;
        }
    }

    @Override
    public void setDenominazione(String denominazione) {
        _denominazione = denominazione;
    }

    @JSON
    @Override
    public String getImmagine() {
        if (_immagine == null) {
            return StringPool.BLANK;
        } else {
            return _immagine;
        }
    }

    @Override
    public void setImmagine(String immagine) {
        _immagine = immagine;
    }

    @JSON
    @Override
    public String getDescrizione() {
        if (_descrizione == null) {
            return StringPool.BLANK;
        } else {
            return _descrizione;
        }
    }

    @Override
    public void setDescrizione(String descrizione) {
        _descrizione = descrizione;
    }

    @JSON
    @Override
    public String getIndirizzo() {
        if (_indirizzo == null) {
            return StringPool.BLANK;
        } else {
            return _indirizzo;
        }
    }

    @Override
    public void setIndirizzo(String indirizzo) {
        _indirizzo = indirizzo;
    }

    @JSON
    @Override
    public double getLat() {
        return _lat;
    }

    @Override
    public void setLat(double lat) {
        _lat = lat;
    }

    @JSON
    @Override
    public double getLng() {
        return _lng;
    }

    @Override
    public void setLng(double lng) {
        _lng = lng;
    }

    @JSON
    @Override
    public double getDistanza() {
        return _distanza;
    }

    @Override
    public void setDistanza(double distanza) {
        _distanza = distanza;
    }

    @JSON
    @Override
    public String getTelefono() {
        if (_telefono == null) {
            return StringPool.BLANK;
        } else {
            return _telefono;
        }
    }

    @Override
    public void setTelefono(String telefono) {
        _telefono = telefono;
    }

    @JSON
    @Override
    public String getEmail() {
        if (_email == null) {
            return StringPool.BLANK;
        } else {
            return _email;
        }
    }

    @Override
    public void setEmail(String email) {
        _email = email;
    }

    @JSON(include = false)
    @Override
    public String getFax() {
        if (_fax == null) {
            return StringPool.BLANK;
        } else {
            return _fax;
        }
    }

    @Override
    public void setFax(String fax) {
        _fax = fax;
    }

    @JSON
    @Override
    public String getOrari() {
        if (_orari == null) {
            return StringPool.BLANK;
        } else {
            return _orari;
        }
    }

    @Override
    public void setOrari(String orari) {
        _orari = orari;
    }

    @JSON(include = false)
    @Override
    public String getLocale() {
        if (_locale == null) {
            return StringPool.BLANK;
        } else {
            return _locale;
        }
    }

    @Override
    public void setLocale(String locale) {
        _columnBitmask |= LOCALE_COLUMN_BITMASK;

        if (_originalLocale == null) {
            _originalLocale = _locale;
        }

        _locale = locale;
    }

    public String getOriginalLocale() {
        return GetterUtil.getString(_originalLocale);
    }

    @JSON(include = false)
    @Override
    public int getStato() {
        return _stato;
    }

    @Override
    public void setStato(int stato) {
        _stato = stato;
    }

    @JSON(include = false)
    @Override
    public String getChildrenEdottoOspedaleCollegato() {
        if (_childrenEdottoOspedaleCollegato == null) {
            return StringPool.BLANK;
        } else {
            return _childrenEdottoOspedaleCollegato;
        }
    }

    @Override
    public void setChildrenEdottoOspedaleCollegato(
        String childrenEdottoOspedaleCollegato) {
        _childrenEdottoOspedaleCollegato = childrenEdottoOspedaleCollegato;
    }

    @JSON(include = false)
    @Override
    public String getChildrenEdottoAmbulatorio() {
        if (_childrenEdottoAmbulatorio == null) {
            return StringPool.BLANK;
        } else {
            return _childrenEdottoAmbulatorio;
        }
    }

    @Override
    public void setChildrenEdottoAmbulatorio(String childrenEdottoAmbulatorio) {
        _childrenEdottoAmbulatorio = childrenEdottoAmbulatorio;
    }

    @JSON(include = false)
    @Override
    public String getChildrenEdottoUnitaOperativa() {
        if (_childrenEdottoUnitaOperativa == null) {
            return StringPool.BLANK;
        } else {
            return _childrenEdottoUnitaOperativa;
        }
    }

    @Override
    public void setChildrenEdottoUnitaOperativa(
        String childrenEdottoUnitaOperativa) {
        _childrenEdottoUnitaOperativa = childrenEdottoUnitaOperativa;
    }

    @JSON(include = false)
    @Override
    public String getChildrenEdottoUnitaps() {
        if (_childrenEdottoUnitaps == null) {
            return StringPool.BLANK;
        } else {
            return _childrenEdottoUnitaps;
        }
    }

    @Override
    public void setChildrenEdottoUnitaps(String childrenEdottoUnitaps) {
        _childrenEdottoUnitaps = childrenEdottoUnitaps;
    }

    @JSON(include = false)
    @Override
    public String getRelazioneAmbulatorio() {
        if (_relazioneAmbulatorio == null) {
            return StringPool.BLANK;
        } else {
            return _relazioneAmbulatorio;
        }
    }

    @Override
    public void setRelazioneAmbulatorio(String relazioneAmbulatorio) {
        _relazioneAmbulatorio = relazioneAmbulatorio;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            StrutturaSanitaria.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public StrutturaSanitaria toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (StrutturaSanitaria) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        StrutturaSanitariaImpl strutturaSanitariaImpl = new StrutturaSanitariaImpl();

        strutturaSanitariaImpl.setPk(getPk());
        strutturaSanitariaImpl.setIdStruttura(getIdStruttura());
        strutturaSanitariaImpl.setGroupId(getGroupId());
        strutturaSanitariaImpl.setIdTipoStruttura(getIdTipoStruttura());
        strutturaSanitariaImpl.setTipoStruttura(getTipoStruttura());
        strutturaSanitariaImpl.setTipologia(getTipologia());
        strutturaSanitariaImpl.setDenominazione(getDenominazione());
        strutturaSanitariaImpl.setImmagine(getImmagine());
        strutturaSanitariaImpl.setDescrizione(getDescrizione());
        strutturaSanitariaImpl.setIndirizzo(getIndirizzo());
        strutturaSanitariaImpl.setLat(getLat());
        strutturaSanitariaImpl.setLng(getLng());
        strutturaSanitariaImpl.setDistanza(getDistanza());
        strutturaSanitariaImpl.setTelefono(getTelefono());
        strutturaSanitariaImpl.setEmail(getEmail());
        strutturaSanitariaImpl.setFax(getFax());
        strutturaSanitariaImpl.setOrari(getOrari());
        strutturaSanitariaImpl.setLocale(getLocale());
        strutturaSanitariaImpl.setStato(getStato());
        strutturaSanitariaImpl.setChildrenEdottoOspedaleCollegato(getChildrenEdottoOspedaleCollegato());
        strutturaSanitariaImpl.setChildrenEdottoAmbulatorio(getChildrenEdottoAmbulatorio());
        strutturaSanitariaImpl.setChildrenEdottoUnitaOperativa(getChildrenEdottoUnitaOperativa());
        strutturaSanitariaImpl.setChildrenEdottoUnitaps(getChildrenEdottoUnitaps());
        strutturaSanitariaImpl.setRelazioneAmbulatorio(getRelazioneAmbulatorio());

        strutturaSanitariaImpl.resetOriginalValues();

        return strutturaSanitariaImpl;
    }

    @Override
    public int compareTo(StrutturaSanitaria strutturaSanitaria) {
        long primaryKey = strutturaSanitaria.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof StrutturaSanitaria)) {
            return false;
        }

        StrutturaSanitaria strutturaSanitaria = (StrutturaSanitaria) obj;

        long primaryKey = strutturaSanitaria.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        StrutturaSanitariaModelImpl strutturaSanitariaModelImpl = this;

        strutturaSanitariaModelImpl._originalIdStruttura = strutturaSanitariaModelImpl._idStruttura;

        strutturaSanitariaModelImpl._setOriginalIdStruttura = false;

        strutturaSanitariaModelImpl._originalLocale = strutturaSanitariaModelImpl._locale;

        strutturaSanitariaModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<StrutturaSanitaria> toCacheModel() {
        StrutturaSanitariaCacheModel strutturaSanitariaCacheModel = new StrutturaSanitariaCacheModel();

        strutturaSanitariaCacheModel.pk = getPk();

        strutturaSanitariaCacheModel.idStruttura = getIdStruttura();

        strutturaSanitariaCacheModel.groupId = getGroupId();

        strutturaSanitariaCacheModel.idTipoStruttura = getIdTipoStruttura();

        String idTipoStruttura = strutturaSanitariaCacheModel.idTipoStruttura;

        if ((idTipoStruttura != null) && (idTipoStruttura.length() == 0)) {
            strutturaSanitariaCacheModel.idTipoStruttura = null;
        }

        strutturaSanitariaCacheModel.tipoStruttura = getTipoStruttura();

        String tipoStruttura = strutturaSanitariaCacheModel.tipoStruttura;

        if ((tipoStruttura != null) && (tipoStruttura.length() == 0)) {
            strutturaSanitariaCacheModel.tipoStruttura = null;
        }

        strutturaSanitariaCacheModel.tipologia = getTipologia();

        String tipologia = strutturaSanitariaCacheModel.tipologia;

        if ((tipologia != null) && (tipologia.length() == 0)) {
            strutturaSanitariaCacheModel.tipologia = null;
        }

        strutturaSanitariaCacheModel.denominazione = getDenominazione();

        String denominazione = strutturaSanitariaCacheModel.denominazione;

        if ((denominazione != null) && (denominazione.length() == 0)) {
            strutturaSanitariaCacheModel.denominazione = null;
        }

        strutturaSanitariaCacheModel.immagine = getImmagine();

        String immagine = strutturaSanitariaCacheModel.immagine;

        if ((immagine != null) && (immagine.length() == 0)) {
            strutturaSanitariaCacheModel.immagine = null;
        }

        strutturaSanitariaCacheModel.descrizione = getDescrizione();

        String descrizione = strutturaSanitariaCacheModel.descrizione;

        if ((descrizione != null) && (descrizione.length() == 0)) {
            strutturaSanitariaCacheModel.descrizione = null;
        }

        strutturaSanitariaCacheModel.indirizzo = getIndirizzo();

        String indirizzo = strutturaSanitariaCacheModel.indirizzo;

        if ((indirizzo != null) && (indirizzo.length() == 0)) {
            strutturaSanitariaCacheModel.indirizzo = null;
        }

        strutturaSanitariaCacheModel.lat = getLat();

        strutturaSanitariaCacheModel.lng = getLng();

        strutturaSanitariaCacheModel.distanza = getDistanza();

        strutturaSanitariaCacheModel.telefono = getTelefono();

        String telefono = strutturaSanitariaCacheModel.telefono;

        if ((telefono != null) && (telefono.length() == 0)) {
            strutturaSanitariaCacheModel.telefono = null;
        }

        strutturaSanitariaCacheModel.email = getEmail();

        String email = strutturaSanitariaCacheModel.email;

        if ((email != null) && (email.length() == 0)) {
            strutturaSanitariaCacheModel.email = null;
        }

        strutturaSanitariaCacheModel.fax = getFax();

        String fax = strutturaSanitariaCacheModel.fax;

        if ((fax != null) && (fax.length() == 0)) {
            strutturaSanitariaCacheModel.fax = null;
        }

        strutturaSanitariaCacheModel.orari = getOrari();

        String orari = strutturaSanitariaCacheModel.orari;

        if ((orari != null) && (orari.length() == 0)) {
            strutturaSanitariaCacheModel.orari = null;
        }

        strutturaSanitariaCacheModel.locale = getLocale();

        String locale = strutturaSanitariaCacheModel.locale;

        if ((locale != null) && (locale.length() == 0)) {
            strutturaSanitariaCacheModel.locale = null;
        }

        strutturaSanitariaCacheModel.stato = getStato();

        strutturaSanitariaCacheModel.childrenEdottoOspedaleCollegato = getChildrenEdottoOspedaleCollegato();

        String childrenEdottoOspedaleCollegato = strutturaSanitariaCacheModel.childrenEdottoOspedaleCollegato;

        if ((childrenEdottoOspedaleCollegato != null) &&
                (childrenEdottoOspedaleCollegato.length() == 0)) {
            strutturaSanitariaCacheModel.childrenEdottoOspedaleCollegato = null;
        }

        strutturaSanitariaCacheModel.childrenEdottoAmbulatorio = getChildrenEdottoAmbulatorio();

        String childrenEdottoAmbulatorio = strutturaSanitariaCacheModel.childrenEdottoAmbulatorio;

        if ((childrenEdottoAmbulatorio != null) &&
                (childrenEdottoAmbulatorio.length() == 0)) {
            strutturaSanitariaCacheModel.childrenEdottoAmbulatorio = null;
        }

        strutturaSanitariaCacheModel.childrenEdottoUnitaOperativa = getChildrenEdottoUnitaOperativa();

        String childrenEdottoUnitaOperativa = strutturaSanitariaCacheModel.childrenEdottoUnitaOperativa;

        if ((childrenEdottoUnitaOperativa != null) &&
                (childrenEdottoUnitaOperativa.length() == 0)) {
            strutturaSanitariaCacheModel.childrenEdottoUnitaOperativa = null;
        }

        strutturaSanitariaCacheModel.childrenEdottoUnitaps = getChildrenEdottoUnitaps();

        String childrenEdottoUnitaps = strutturaSanitariaCacheModel.childrenEdottoUnitaps;

        if ((childrenEdottoUnitaps != null) &&
                (childrenEdottoUnitaps.length() == 0)) {
            strutturaSanitariaCacheModel.childrenEdottoUnitaps = null;
        }

        strutturaSanitariaCacheModel.relazioneAmbulatorio = getRelazioneAmbulatorio();

        String relazioneAmbulatorio = strutturaSanitariaCacheModel.relazioneAmbulatorio;

        if ((relazioneAmbulatorio != null) &&
                (relazioneAmbulatorio.length() == 0)) {
            strutturaSanitariaCacheModel.relazioneAmbulatorio = null;
        }

        return strutturaSanitariaCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(49);

        sb.append("{pk=");
        sb.append(getPk());
        sb.append(", idStruttura=");
        sb.append(getIdStruttura());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", idTipoStruttura=");
        sb.append(getIdTipoStruttura());
        sb.append(", tipoStruttura=");
        sb.append(getTipoStruttura());
        sb.append(", tipologia=");
        sb.append(getTipologia());
        sb.append(", denominazione=");
        sb.append(getDenominazione());
        sb.append(", immagine=");
        sb.append(getImmagine());
        sb.append(", descrizione=");
        sb.append(getDescrizione());
        sb.append(", indirizzo=");
        sb.append(getIndirizzo());
        sb.append(", lat=");
        sb.append(getLat());
        sb.append(", lng=");
        sb.append(getLng());
        sb.append(", distanza=");
        sb.append(getDistanza());
        sb.append(", telefono=");
        sb.append(getTelefono());
        sb.append(", email=");
        sb.append(getEmail());
        sb.append(", fax=");
        sb.append(getFax());
        sb.append(", orari=");
        sb.append(getOrari());
        sb.append(", locale=");
        sb.append(getLocale());
        sb.append(", stato=");
        sb.append(getStato());
        sb.append(", childrenEdottoOspedaleCollegato=");
        sb.append(getChildrenEdottoOspedaleCollegato());
        sb.append(", childrenEdottoAmbulatorio=");
        sb.append(getChildrenEdottoAmbulatorio());
        sb.append(", childrenEdottoUnitaOperativa=");
        sb.append(getChildrenEdottoUnitaOperativa());
        sb.append(", childrenEdottoUnitaps=");
        sb.append(getChildrenEdottoUnitaps());
        sb.append(", relazioneAmbulatorio=");
        sb.append(getRelazioneAmbulatorio());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(76);

        sb.append("<model><model-name>");
        sb.append("it.sincon.sanita.services.model.StrutturaSanitaria");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>pk</column-name><column-value><![CDATA[");
        sb.append(getPk());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>idStruttura</column-name><column-value><![CDATA[");
        sb.append(getIdStruttura());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>idTipoStruttura</column-name><column-value><![CDATA[");
        sb.append(getIdTipoStruttura());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tipoStruttura</column-name><column-value><![CDATA[");
        sb.append(getTipoStruttura());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tipologia</column-name><column-value><![CDATA[");
        sb.append(getTipologia());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>denominazione</column-name><column-value><![CDATA[");
        sb.append(getDenominazione());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>immagine</column-name><column-value><![CDATA[");
        sb.append(getImmagine());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>descrizione</column-name><column-value><![CDATA[");
        sb.append(getDescrizione());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>indirizzo</column-name><column-value><![CDATA[");
        sb.append(getIndirizzo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lat</column-name><column-value><![CDATA[");
        sb.append(getLat());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lng</column-name><column-value><![CDATA[");
        sb.append(getLng());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>distanza</column-name><column-value><![CDATA[");
        sb.append(getDistanza());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>telefono</column-name><column-value><![CDATA[");
        sb.append(getTelefono());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>email</column-name><column-value><![CDATA[");
        sb.append(getEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fax</column-name><column-value><![CDATA[");
        sb.append(getFax());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>orari</column-name><column-value><![CDATA[");
        sb.append(getOrari());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>locale</column-name><column-value><![CDATA[");
        sb.append(getLocale());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>stato</column-name><column-value><![CDATA[");
        sb.append(getStato());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>childrenEdottoOspedaleCollegato</column-name><column-value><![CDATA[");
        sb.append(getChildrenEdottoOspedaleCollegato());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>childrenEdottoAmbulatorio</column-name><column-value><![CDATA[");
        sb.append(getChildrenEdottoAmbulatorio());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>childrenEdottoUnitaOperativa</column-name><column-value><![CDATA[");
        sb.append(getChildrenEdottoUnitaOperativa());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>childrenEdottoUnitaps</column-name><column-value><![CDATA[");
        sb.append(getChildrenEdottoUnitaps());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>relazioneAmbulatorio</column-name><column-value><![CDATA[");
        sb.append(getRelazioneAmbulatorio());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
